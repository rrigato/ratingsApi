############################
#Television ratings api built with an api gateway frontend as a lambda proxy
#
#1) Runs the cloudformation template to create dev environment
#
#
############################
version: 0.2
env: 
  shell: bash
phases:
  ###########################################
  #Uses a python runtime
  #Note that you do not need the \ to escape
  #aws cli commands
  ###########################################
  install:
    runtime-versions:
       python: 3.8

    commands:
      - echo Entered the install phase...
      - BUILD_ENVIRONMENT=dev
      - PROJECT_NAME=ratingsapi       
      - APIGW_STACK="${BUILD_ENVIRONMENT}-${PROJECT_NAME}-apigw"    
      - pip install -r tests/requirements_dev.txt
  build:
    commands:
      - echo Defined build variables
      - echo $BUILD_ENVIRONMENT
      - echo $APIGW_STACK


      - echo "running unit test directory"
      - python -m unittest discover -s tests.unit
      
      - echo "Creating $APIGW_STACK"
      - aws cloudformation create-stack --stack-name $APIGW_STACK
          --template-body file://templates/api_s3_bucket.yml
          --capabilities CAPABILITY_AUTO_EXPAND CAPABILITY_NAMED_IAM
          --tags Key=source,Value=$PROJECT_NAME
          
      #Waits until the stack has been successfully created
      - aws cloudformation wait stack-create-complete
        --stack-name $APIGW_STACK

      - echo "Iterating lambda functions"
      - ./builds/iterate_lambda.sh

      # - aws cloudformation create-stack --stack-name $APIGW_STACK
      #     --template-body file://templates/api_s3_bucket.yml
      #     --capabilities CAPABILITY_NAMED_IAM

      # - aws s3 cp templates/openapi3_spec.yml "s3://${BUILD_ENVIRONMENT}-${PROJECT_NAME}/v1"

      # #Waits until the stack has been successfully created
      # - aws cloudformation wait stack-create-complete
      #   --stack-name $APIGW_STACK

      #run tests after stack has built
      - python -m unittest tests.test_aws_resources 


  post_build:
    commands:
      - echo cleaning up resources

      - aws cloudformation delete-stack --stack-name $APIGW_STACK


artifacts:
  files:
    ##########################
    #Adds artifact that can be referenced in later stages from 
    #${CODEBUILD_SRC_DIR_BuildDevratingsapi}
    ##########################
    - 'logs/*'
  name: 'BuildDevratingsapi'
