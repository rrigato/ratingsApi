############################
#Prod deployment
#
#Merges dev branch into master branch for
#ratingsapi
############################
version: 0.2

phases:
  install:
    runtime-versions:
       python: 3.8
    commands:
      - echo Entered the install phase...

      - APIGW_VERSION=v1
      - BUILD_ENVIRONMENT=prod
      - PROJECT_NAME=ratingsapi
      - APIGW_STACK="${PROJECT_NAME}-${BUILD_ENVIRONMENT}" 
      - pip install -r tests/requirements_prod.txt
      - ls -l
    finally:

  build:
    commands:
      - echo Defined build variables
      - echo $APIGW_VERSION
      - echo $BUILD_ENVIRONMENT
      - echo $PROJECT_NAME
      - echo $APIGW_STACK

      - echo "Iterating lambda functions"
      - ./builds/iterate_lambda.sh

      #rest api id for creating a deployment
      - REST_API_ID=$(aws cloudformation describe-stacks --query
        "Stacks[0].Outputs[?OutputKey=='ratingsApigatewayId'].OutputValue"
        --stack-name $APIGW_STACK --output text)

      - echo $REST_API_ID

      - STAGE_DESCRIPTION="$PROJECT_NAME $APIGW_VERSION on $(date +%Y-%m-%d)"

      #create deployment
      - aws apigateway create-deployment
        --rest-api-id $REST_API_ID --stage-name "$APIGW_VERSION"
        --stage-description "$STAGE_DESCRIPTION"
        
      #runs prod tests
      - python -m unittest tests.test_aws_resources

      #merges dev branch into master now that all tests have
      #been passed and artifacts created
      - aws codecommit merge-branches-by-fast-forward
        --source-commit-specifier dev
        --destination-commit-specifier master
        --repository-name $PROJECT_NAME

  post_build:
    commands:
      - echo Entered the post_build phase...
      - echo Build completed on `date`

